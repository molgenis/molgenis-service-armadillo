# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
# https://circleci.com/docs/variables/#built-in-environment-variables
#
version: 2.1

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  slack: circleci/slack@4.4.4

definitions:
  build_config: &build_config
    docker:
      - image: molgenis/ci-build-armadillo:1.1.5
    working_directory: ~/repo
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb


jobs:
  build:
    docker:
      - image: molgenis/ci-build-armadillo:1.1.5

    working_directory: ~/repo
    resource_class: large

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - setup_remote_docker:
          version: previous
          docker_layer_caching: true

      - run:
          name: Sign in to docker
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      - run:
          name: Setup git
          command: |
            git config --global --add safe.directory '*'
            git config user.email "molgenis@gmail.com"
            git config user.name "molgenis-jenkins"
            git config url.https://.insteadOf git://

      - run:
          name: Build Armadillo and R CICD image
          command: |
            ./gradlew docker ci

      - run:
          name: build, test, push docker
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              ./gradlew --stacktrace --info \
                test jacocoMergedReport \
                sonar \
                  -Dsonar.token=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true \
                release \
                  -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN} -Dorg.ajoberstar.grgit.auth.password \
                dockerPush
            else
              echo "PR number: ${CIRCLE_PULL_REQUEST##*/}"
              ./gradlew --stacktrace \
                test \
                jacocoMergedReport \
                sonar \
                --no-daemon \
                  -Dsonar.login=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true \
                  -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN} -Dorg.ajoberstar.grgit.auth.password \
                  -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/} -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} \
                dockerPush
            fi

      - run:
          name: deploy preview to Azure
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              export $( cat build/ci.properties | xargs )
              bash ci/set_kubectl_config-azure.sh
              bash ci/create_or_update_k8s-azure.sh "preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}" ${TAG_NAME} DELETE
              curl -d "token=${SLACK_TOKEN}" \
              -d "text=*<${CIRCLE_PULL_REQUEST}|Circle-CI » Armadillo » Armadillo-Service » PR-${CIRCLE_PULL_REQUEST##*/} #${CIRCLE_BUILD_NUM}>*
              PR Preview available on https://preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}.dev.molgenis.org" \
              -d "channel=C0639V5KTCY" \
              -X POST https://slack.com/api/chat.postMessage
            fi

      - run:
          name: Wait 30s for deployment to get ingress configuration to come up
          command: sleep 30;

      - run:
          name: Wait for preview to be up, poll every 10 seconds
          command: |
            GETURL="https://preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}.dev.molgenis.org/"
            while true;
                do
                    STATUS=$(curl --silent --head $GETURL | awk '/^HTTP/{print $2}')
                    echo ${STATUS}
                    if [[ "$STATUS" == "200" ]]; then
                        echo "preview is up";
                        break;
                    else
                        echo "preview is not ready yet, waiting 10 seconds...";
                    fi;
                    sleep 10;
                done

      - run:
          name: Settting enviroment for testing
          command: |
            bash ci/set_test_environment.sh "preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}"

      - run:
          name: Install dependencies for release testing
          command: |
            ./scripts/release/install_release_script_dependencies.R

      - run:
          name: Release testing
          command: |
             cd scripts/release && ./release-test.R

  delete-helm-preview:
    environment:
      GHA_PREVIEW_NR: << pipeline.parameters.GHA_Meta >>

    docker:
      - image: molgenis/ci-build-armadillo:1.1.5

    working_directory: ~/repo
    resource_class: large

    steps:
    - checkout
    - run:
        name: delete preview on azure
        command: |
          export $( cat build/ci.properties | xargs )
          bash ci/set_kubectl_config-azure.sh
          kubectl delete namespace preview-emx2-pr-${GHA_PREVIEW_NR} || true

workflows:
  version: 2
  build-deploy:
    unless:
      equal: ["delete-pr-preview", << pipeline.parameters.GHA_Action >>]
    jobs:
      - build:
        filters:
          branches:
            ignore: master

  delete_preview:
    when:
      equal: [ "delete-pr-preview", << pipeline.parameters.GHA_Action >> ]
    jobs:
      - delete-helm-preview
