# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
# https://circleci.com/docs/variables/#built-in-environment-variables
#
version: 2.1

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  slack: circleci/slack@4.4.4

definitions:
  build_config: &build_config
    docker:
    - image: molgenis/ci-build:1.2.3
    working_directory: ~/repo
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

  

jobs:
  build:
    docker:
      - image: molgenis/ci-build:1.2.3 

    working_directory: ~/repo
    resource_class: large

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      # https://support.circleci.com/hc/en-us/articles/16164465307931-Using-an-environment-variable-to-define-a-path-when-using-the-Docker-executor
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          # replace ~ by $HOME
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV

      - run:
          name: Test env
          command: |
            echo "id: `id`"
            cd
            cd repo
            pwd
            echo "$CIRCLE_WORKING_DIRECTORY"

      - run:
          name: Install Docker client
          command: apt-get -y install docker-ce docker-ce-cli containerd.io

      - run:
          name: Install zip
          command: apt-get --yes install zip

      - setup_remote_docker:
          version: previous
          docker_layer_caching: true

      - run:
          name: Sign in to docker
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      - run:
          name: Setup git
          command: |
            git config --global --add safe.directory '*'
            git config user.email "molgenis@gmail.com"
            git config user.name "molgenis-jenkins"
            git config url.https://.insteadOf git://

      - run:
          name: Build Armadillo and R CICD image
          command: |
            ./gradlew docker ci
            ./docker/bin/prepare.bash ci

      - store_artifacts:
          path: build/libs

      - run:
          name: Zip armadillo-compose
          command: |
            echo "Working directory: $CIRCLE_WORKING_DIRECTORY"
            cd $CIRCLE_WORKING_DIRECTORY
            mkdir build/artifacts

            # Workaround for ~ expansion not working
            K=`pwd`
            cd build/docker/
            zip -r $K/build/artifacts/armadillo-compose.zip armadillo-compose

      - store_artifacts:
          path: build/artifacts/armadillo-compose.zip

      - run:
          name: build, test, push docker
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              ./gradlew --stacktrace --info \
                test jacocoMergedReport \
                sonar \
                  -Dsonar.login=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true \
                release \
                  -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN} -Dorg.ajoberstar.grgit.auth.password \
                dockerPush
            else
              echo "PR number: ${CIRCLE_PULL_REQUEST##*/}"
              ./gradlew --stacktrace \
                test \
                jacocoMergedReport \
                sonar \
                --no-daemon \
                  -Dsonar.login=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true \
                  -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN} -Dorg.ajoberstar.grgit.auth.password \
                  -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/} -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} \
                dockerPush
            fi

      - run:
          name: deploy preview to Azure
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              export $( cat build/ci.properties | xargs )
              bash ci/set_kubectl_config-azure.sh
              bash ci/create_or_update_k8s-azure.sh "preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}" ${TAG_NAME} DELETE
              curl -d "token=${SLACK_TOKEN}" \
              -d "text=*<${CIRCLE_PULL_REQUEST}|Circle-CI » Armadillo » Armadillo-Service » PR-${CIRCLE_PULL_REQUEST##*/} #${CIRCLE_BUILD_NUM}>*
              PR Preview available on https://preview-armadillo-pr-${CIRCLE_PULL_REQUEST##*/}.dev.molgenis.org" \
              -d "channel=C0639V5KTCY" \
              -X POST https://slack.com/api/chat.postMessage
            fi

      - run:
          name: Make sure all images declared in docker-compose.yml are available and ready
          command: |
            echo "Working directory: $CIRCLE_WORKING_DIRECTORY"
            cd $CIRCLE_WORKING_DIRECTORY

            # Somehow build/docker/armadillo-compose is deleted so redo
            ./docker/bin/prepare.bash ci

            cd build/docker/armadillo-compose

            docker images ls
            docker compose up -d
            docker images ls

      - run:
          name: Start docker-compose and wait for `release-test.R` to finish
          command: |
            # FIXME: make this name not directory dependent
            ARMADILLO="armadillo-compose-armadillo-1"

            cd $CIRCLE_WORKING_DIRECTORY
            cd build/docker/armadillo-compose

            docker compose up -d
            docker ps


            # 1 CircleCI docker in docker workaround
            docker cp ./armadillo/config $ARMADILLO:/config
            docker cp ./armadillo/data   $ARMADILLO:/data
            docker cp ./armadillo/logs   $ARMADILLO:/logs
            # .1 CircleCI docker in docker workaround

            # Poll to see Armadillo is up
            docker container run --network container:$ARMADILLO \
              docker.io/jwilder/dockerize \
              -wait http://localhost:8080/ \
              -wait-retry-interval 20s \
              -timeout 30s || echo "Timed out"

            cd $CIRCLE_WORKING_DIRECTORY
            cd build/docker/cicd

            # Run release-test.R
            docker container run \
              --network container:$ARMADILLO \
              --interactive --tty \
              --entrypoint /bin/bash molgenis/r-cicd -c "cd /cicd/scripts/release ; ./armadillo-ready.bash"

            cd $CIRCLE_WORKING_DIRECTORY
            cd build/docker/armadillo-compose

            # 2 CircleCI docker in docker workaround
            # See what changed within Armadillo
            docker cp $ARMADILLO:/logs   ./armadillo/logs
            # .2 CircleCI docker in docker workaround

            docker container ls
            docker compose down
            docker images ls
            docker compose rm

  delete-helm-preview:
    environment:
      GHA_PREVIEW_NR: << pipeline.parameters.GHA_Meta >>
    
    docker:
      - image: molgenis/ci-build:1.2.3 

    working_directory: ~/repo
    resource_class: large

    steps:
    - checkout
    - run:
        name: delete preview on azure
        command: |
          export $( cat build/ci.properties | xargs )
          bash ci/set_kubectl_config-azure.sh
          kubectl delete namespace preview-emx2-pr-${GHA_PREVIEW_NR} || true

workflows:
  version: 2
  build-deploy:
    unless:
      equal: ["delete-pr-preview", << pipeline.parameters.GHA_Action >>]
    jobs:
    - build:
      filters:
        branches:
          ignore: master
  
  delete_preview:
    when:
      equal: [ "delete-pr-preview", << pipeline.parameters.GHA_Action >> ]
    jobs:
    - delete-helm-preview
    


