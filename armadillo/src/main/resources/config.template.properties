# This is the template for editing through the UI
# It needs:
# java -

## step: 1
## Securing the password for local login

## Change the password
spring.security.user.password=admin

## Change the user name
spring.security.user.name=admin

spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

## step: 1
## name: Basic configuration
## Directory for storing configuration and data
## Changing this will restart the whole configuration

## type: directory
## restart
## type: dir
storage.root-dir=data


## Needed to reallocate and for download (defaults 'logs/audit.log')
## type: file
audit.log.path: logs/audit.log

## Needed to download ... this file is reallocated by OPS (defaults 'logs/armadillo.log')
## type: file
stdout.log.path: logs/armadillo.log

## step: 2
## name: Authentication
## restart: true
## When setting any of these a restart
## requires: all

## The OIDC or oauth provider URL
## type: url
oidc.issuer.url=

## Application ID for this Armadillo instance given by your OIDC provider
## type: string
oidc.client.id=

## Secret for this Armadillo instance given by your OIDC provider
## type: string
oidc.client.secret=

## step: 3

## Setting this needs a configured OIDC
## requires: OIDC
armadillo.oidc-admin-user=user@yourdomain.org

## step: 4
## type:boolean
armadillo.docker-management-enabled=true
armadillo.docker-run-in-container=false
armadillo.container-prefix=


## step: 10
## name: logging
## add: logging.level

## Logging information about Armadillo code itself
logging.level.org.molgenis=INFO


## step: auto
## Dropped when not all conditionals are met
## conditional: oidc.issuer.url oidc.client.id oidc.client.secret
#spring.security.oauth2.client.provider.molgenis.issuer-uri=${oidc.issuer.url}
#spring.security.oauth2.client.registration.molgenis.client-id=${oidc.client.id}
#spring.security.oauth2.client.registration.molgenis.client-secret=${oidc.client.secret}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${oidc.issuer.url}
#spring.security.oauth2.resourceserver.opaquetoken.client-id=${oidc.client.id}
