#!/bin/sh
# from https://medium.com/@mmessell/apply-spotless-formatting-with-git-pre-commit-hook-1c484ea68c34
# this will be installed during gradle build into .git/hooks/pre-commit

echo '[git hook] executing gradle spotlessApply and format before commit'

# find the changes
stagedFiles=$(git diff --staged --name-only)

# run the spotlessCheck with the gradle wrapper
./gradlew :armadillo:spotlessApply :r:spotlessApply :ui:format --daemon

# add the reformatted files
for file in $stagedFiles; do
  if test -f "$file"; then
    git add $file
  fi
done

# update github PR template with link to preview URL
# Get number of PR
commit_hash=$(git rev-parse HEAD)
gh_api_url=https://api.github.com/search/issues?q=sha:$commit_hash
gh_pr_number=$(curl -s $gh_api_url | jq '.items[0].number')
echo $(gh_pr_number)

if [-z "$gh_pr_number"]
then
  echo 'PR empty'
  exit 0
fi

# Check if pr number already contains current number
if grep -q $gh_pr_number ./.github/PULL_REQUEST_TEMPLATE.md; then
    exit 0
fi

echo creating new pr template 📝

# Write text to the pr template file
cat > ./.github/pull_request_template.md <<- EOM
how to test 🧪:
- explain here what to do to test this (or point to unit tests)

todo 🛠️:
- [ ] updated docs in case of new feature
- [ ] added tests

Once built, this PR can be previewed on:
https://preview-armadillo-pr-${gh_pr_number}.dev.molgenis.org/
EOM

echo $(git status)